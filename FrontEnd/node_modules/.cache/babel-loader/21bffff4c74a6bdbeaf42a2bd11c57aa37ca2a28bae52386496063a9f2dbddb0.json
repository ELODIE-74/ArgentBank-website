{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\EditUserInfo\\\\EditUserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUsername } from \"../../actions/authActions\";\nimport \"../EditUserInfo/EditUserinfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserInfo = () => {\n  _s();\n  const {\n    userProfile,\n    accessToken\n  } = useSelector(state => state.auth);\n  const {\n    firstName,\n    lastName,\n    userName\n  } = userProfile;\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(\"\");\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [username, setUsername] = useState(userName || \"\"); // Initialiser avec une chaîne vide si userName est null\n\n  const handleEditName = () => {\n    setIsFormVisible(true);\n    setUsername(userName || \"\"); // Initialiser avec une chaîne vide si userName est null\n  };\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handleSave = async event => {\n    event.preventDefault();\n    try {\n      await dispatch(updateUsername({\n        accessToken,\n        userName: username\n      }));\n      setMessage(\"Informations enregistrées avec succès !\");\n      setIsFormVisible(false);\n    } catch (error) {\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\n    }\n  };\n  const handleCancel = event => {\n    event.preventDefault();\n    setUsername(userName || \"\");\n    setMessage(\"Modifications annulées.\");\n    setIsFormVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `form-group edit-user-info ${isFormVisible ? \"form-visible\" : \"\"}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUserInfo, \"RNQRZcXeSpdGskdy5utvBnefE7I=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = EditUserInfo;\nexport default EditUserInfo;\n\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUsername } from \"../../actions/authActions\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  const { firstName, lastName, userName } = userProfile;\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [username, setUsername] = useState(userName); // Ajoutez cette ligne pour stocker le nom d'utilisateur\r\n  //console.log(userProfile);\r\n  //console.log(accessToken);\r\n  //affichage du formulaire\r\n  const handleEditName = () => {\r\n    setIsFormVisible(true);\r\n    setUsername(userName);\r\n  };\r\n\r\n  //changelement du userName, nouvelle valeur\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher le rechargement de la page\r\n    try {\r\n      await dispatch(updateUsername({ accessToken, userName }));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = (event) => {\r\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher le rechargement de la page\r\n    setUsername(userName);\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`form-group edit-user-info ${\r\n        isFormVisible ? \"form-visible\" : \"\"\r\n      }`}\r\n    >\r\n      <div>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          value={firstName}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          value={lastName}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"userName\">UserName:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={handleUsernameChange}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button className=\"save-btn\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button className=\"cancel-btn\" onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {message && <div>{message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;*/\nvar _c;\n$RefreshReg$(_c, \"EditUserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","updateUsername","jsxDEV","_jsxDEV","EditUserInfo","_s","userProfile","accessToken","state","auth","firstName","lastName","userName","dispatch","message","setMessage","isFormVisible","setIsFormVisible","username","setUsername","handleEditName","handleUsernameChange","event","target","value","handleSave","preventDefault","error","handleCancel","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/EditUserInfo/EditUserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUsername } from \"../../actions/authActions\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  const { firstName, lastName, userName } = userProfile;\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [username, setUsername] = useState(userName || \"\"); // Initialiser avec une chaîne vide si userName est null\r\n\r\n  const handleEditName = () => {\r\n    setIsFormVisible(true);\r\n    setUsername(userName || \"\"); // Initialiser avec une chaîne vide si userName est null\r\n  };\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await dispatch(updateUsername({ accessToken, userName: username }));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = (event) => {\r\n    event.preventDefault();\r\n    setUsername(userName || \"\");\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`form-group edit-user-info ${\r\n        isFormVisible ? \"form-visible\" : \"\"\r\n      }`}\r\n    >\r\n      {/* Reste du code */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;\r\n\r\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUsername } from \"../../actions/authActions\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  const { firstName, lastName, userName } = userProfile;\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [username, setUsername] = useState(userName); // Ajoutez cette ligne pour stocker le nom d'utilisateur\r\n  //console.log(userProfile);\r\n  //console.log(accessToken);\r\n  //affichage du formulaire\r\n  const handleEditName = () => {\r\n    setIsFormVisible(true);\r\n    setUsername(userName);\r\n  };\r\n\r\n  //changelement du userName, nouvelle valeur\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher le rechargement de la page\r\n    try {\r\n      await dispatch(updateUsername({ accessToken, userName }));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = (event) => {\r\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher le rechargement de la page\r\n    setUsername(userName);\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`form-group edit-user-info ${\r\n        isFormVisible ? \"form-visible\" : \"\"\r\n      }`}\r\n    >\r\n      <div>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          value={firstName}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          value={lastName}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"userName\">UserName:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={handleUsernameChange}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button className=\"save-btn\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button className=\"cancel-btn\" onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {message && <div>{message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACvE,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGN,WAAW;EACrD,MAAMO,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACe,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;;EAE1D,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3BH,gBAAgB,CAAC,IAAI,CAAC;IACtBE,WAAW,CAACP,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMS,oBAAoB,GAAIC,KAAK,IAAK;IACtCH,WAAW,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOH,KAAK,IAAK;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMb,QAAQ,CAACZ,cAAc,CAAC;QAAEM,WAAW;QAAEK,QAAQ,EAAEM;MAAS,CAAC,CAAC,CAAC;MACnEH,UAAU,CAAC,yCAAyC,CAAC;MACrDE,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdZ,UAAU,CAAC,mDAAmD,CAAC;IACjE;EACF,CAAC;EAED,MAAMa,YAAY,GAAIN,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBP,WAAW,CAACP,QAAQ,IAAI,EAAE,CAAC;IAC3BG,UAAU,CAAC,yBAAyB,CAAC;IACrCE,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IACE0B,SAAS,EAAG,6BACVb,aAAa,GAAG,cAAc,GAAG,EAClC;EAAE;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAEX,CAAC;AAAC5B,EAAA,CA5CID,YAAY;EAAA,QACqBJ,WAAW,EAE/BD,WAAW;AAAA;AAAAmC,EAAA,GAHxB9B,YAAY;AA8ClB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7FA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}