{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\EditUserInfo\\\\EditUserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUsername } from \"../../actions/authActions\";\nimport \"../EditUserInfo/EditUserinfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserInfo = () => {\n  _s();\n  const {\n    userProfile,\n    accessToken\n  } = useSelector(state => state.auth);\n  const {\n    firstName,\n    lastName,\n    userName\n  } = userProfile;\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(\"\");\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [username, setUsername] = useState(userName);\n  const [initialUsername, setInitialUsername] = useState(userName);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditNameButtonVisible, setIsEditNameButtonVisible] = useState(true);\n  /**est appelée lorsque l'utilisateur clique sur le bouton \"Edit User Info\".\r\n   * Elle affiche le formulaire d'édition en mettant isFormVisible à true et\r\n   * initialise username et initialUsername avec la valeur actuelle du userName. */\n  const handleEditName = () => {\n    setIsFormVisible(true);\n    setUsername(userName);\n    setInitialUsername(userName);\n    setIsEditNameButtonVisible(false);\n  };\n\n  /**appelée lorsque l'utilisateur modifie la valeur du champ username.\r\n   * Elle met à jour la valeur de username en conséquence. */\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  //Met à jour la valeur de initialUsername avec la nouvelle valeur de username\n  const handleSave = async () => {\n    try {\n      setIsLoading(true);\n      await dispatch(updateUsername({\n        accessToken,\n        userName: username\n      }));\n      setMessage(\"Informations enregistrées avec succès !\");\n      setIsFormVisible(false);\n      setInitialUsername(username);\n      setIsEditNameButtonVisible(true);\n    } catch (error) {\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  //Met à jour le message pour indiquer que les modifications ont été annulées\n  const handleCancel = () => {\n    setMessage(\"Modifications annulées.\");\n    setIsFormVisible(false);\n    setUsername(initialUsername);\n    setIsEditNameButtonVisible(true);\n  };\n\n  //retourne le rendu conditionnel du bouton \"Edit User Info\" ou du formulaire d'édition en fonction de la valeur de isFormVisible.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divdesignformulaire\",\n    children: [isEditNameButtonVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditName,\n      children: \"Edit User Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group edit-user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit user info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"save-btn\",\n          onClick: handleSave,\n          disabled: isLoading,\n          children: isLoading ? \"Saving...\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: handleCancel,\n          disabled: isLoading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUserInfo, \"mHlKReRLibEfVqB9P7j+Cr5x+Zo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = EditUserInfo;\nexport default EditUserInfo;\nvar _c;\n$RefreshReg$(_c, \"EditUserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","updateUsername","jsxDEV","_jsxDEV","EditUserInfo","_s","userProfile","accessToken","state","auth","firstName","lastName","userName","dispatch","message","setMessage","isFormVisible","setIsFormVisible","username","setUsername","initialUsername","setInitialUsername","isLoading","setIsLoading","isEditNameButtonVisible","setIsEditNameButtonVisible","handleEditName","handleUsernameChange","event","target","value","handleSave","error","handleCancel","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","htmlFor","id","name","disabled","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/EditUserInfo/EditUserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUsername } from \"../../actions/authActions\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\nconst EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  const { firstName, lastName, userName } = userProfile;\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [username, setUsername] = useState(userName);\r\n  const [initialUsername, setInitialUsername] = useState(userName);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEditNameButtonVisible, setIsEditNameButtonVisible] = useState(true);\r\n  /**est appelée lorsque l'utilisateur clique sur le bouton \"Edit User Info\".\r\n   * Elle affiche le formulaire d'édition en mettant isFormVisible à true et\r\n   * initialise username et initialUsername avec la valeur actuelle du userName. */\r\n  const handleEditName = () => {\r\n    setIsFormVisible(true);\r\n    setUsername(userName);\r\n    setInitialUsername(userName);\r\n    setIsEditNameButtonVisible(false);\r\n  };\r\n\r\n  /**appelée lorsque l'utilisateur modifie la valeur du champ username.\r\n   * Elle met à jour la valeur de username en conséquence. */\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  //Met à jour la valeur de initialUsername avec la nouvelle valeur de username\r\n  const handleSave = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      await dispatch(updateUsername({ accessToken, userName: username }));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n      setInitialUsername(username);\r\n      setIsEditNameButtonVisible(true);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  //Met à jour le message pour indiquer que les modifications ont été annulées\r\n  const handleCancel = () => {\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n    setUsername(initialUsername);\r\n    setIsEditNameButtonVisible(true);\r\n  };\r\n\r\n  //retourne le rendu conditionnel du bouton \"Edit User Info\" ou du formulaire d'édition en fonction de la valeur de isFormVisible.\r\n  return (\r\n    <div className=\"divdesignformulaire\">\r\n      {isEditNameButtonVisible && (\r\n        <button onClick={handleEditName}>Edit User Info</button>\r\n      )}\r\n\r\n      {isFormVisible && (\r\n        <form className=\"form-group edit-user-info\">\r\n          <h1>Edit user info</h1>\r\n          <div>\r\n            <label>Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"firstName\">First Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"lastName\">Last Name:</label>\r\n            <input type=\"text\" id=\"lastName\" name=\"lastName\" value={lastName} />\r\n          </div>\r\n\r\n          <div className=\"buttons\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"save-btn\"\r\n              onClick={handleSave}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? \"Saving...\" : \"Save\"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"cancel-btn\"\r\n              onClick={handleCancel}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          {message && <div>{message}</div>}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default EditUserInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}