{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Action pour la connexion\nexport const signIn = createAsyncThunk(\"auth/signIn\", async ({\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    // Appel API pour la connexion\n    const response = await fetch(\"http://localhost:3001/api/v1/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      // Gestion des erreurs de l'API, transmettre correctment au  reducer\n      const error = await response.json();\n      thunkAPI.rejectWithValue({\n        erreur: error.value\n      });\n      console.log(error);\n    }\n    const user = await response.json();\n    return user;\n  } catch (error) {\n    // Gestion des erreurs réseau\n    thunkAPI.rejectWithValue({\n      erreur: error.value\n    });\n    console.log(error);\n  }\n});\n/**\r\n *  export const updateUserInfo  = createAsynchThunk (\r\n« auth/signin/profile »\r\nasynch (username, firstname, lastname) = > {\r\ntry\r\n// appel api pour les données du profil connecté\r\nconst response = await fetch(« http://localhost:3001/api/v1/user/profile », {\r\nmethod : « POST »,\r\nheaders : {\r\n« content-type » : « application/json »,\r\n},\r\nbody : Json.stringify(username,firstname,lastname),\r\n)} \r\n */\n\n// Action pour la déconnexion\nexport const signOut = createAsyncThunk(\"auth/signOut\", async () => {\n  // Appel API pour la déconnexion\n  await fetch(\"/api/logout\", {\n    method: \"POST\"\n  });\n\n  // Retourne un objet vide pour indiquer que la déconnexion a réussi\n  return {};\n});","map":{"version":3,"names":["createAsyncThunk","signIn","email","password","thunkAPI","response","fetch","method","headers","body","JSON","stringify","ok","error","json","rejectWithValue","erreur","value","console","log","user","signOut"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/actions/authActions.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Action pour la connexion\r\nexport const signIn = createAsyncThunk(\r\n  \"auth/signIn\",\r\n  async ({ email, password }, thunkAPI) => {\r\n    try {\r\n      // Appel API pour la connexion\r\n      const response = await fetch(\"http://localhost:3001/api/v1/user/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Gestion des erreurs de l'API, transmettre correctment au  reducer\r\n        const error = await response.json();\r\n        thunkAPI.rejectWithValue({ erreur: error.value });\r\n        console.log(error);\r\n      }\r\n\r\n      const user = await response.json();\r\n      return user;\r\n    } catch (error) {\r\n      // Gestion des erreurs réseau\r\n      thunkAPI.rejectWithValue({ erreur: error.value });\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n/**\r\n *  export const updateUserInfo  = createAsynchThunk (\r\n« auth/signin/profile »\r\nasynch (username, firstname, lastname) = > {\r\ntry\r\n// appel api pour les données du profil connecté\r\nconst response = await fetch(« http://localhost:3001/api/v1/user/profile », {\r\nmethod : « POST »,\r\nheaders : {\r\n« content-type » : « application/json »,\r\n},\r\nbody : Json.stringify(username,firstname,lastname),\r\n)} \r\n */\r\n\r\n// Action pour la déconnexion\r\nexport const signOut = createAsyncThunk(\"auth/signOut\", async () => {\r\n  // Appel API pour la déconnexion\r\n  await fetch(\"/api/logout\", {\r\n    method: \"POST\",\r\n  });\r\n\r\n  // Retourne un objet vide pour indiquer que la déconnexion a réussi\r\n  return {};\r\n});\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;;AAEnD;AACA,OAAO,MAAMC,MAAM,GAAGD,gBAAgB,CACpC,aAAa,EACb,OAAO;EAAEE,KAAK;EAAEC;AAAS,CAAC,EAAEC,QAAQ,KAAK;EACvC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MAChB;MACA,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnCV,QAAQ,CAACW,eAAe,CAAC;QAAEC,MAAM,EAAEH,KAAK,CAACI;MAAM,CAAC,CAAC;MACjDC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IACpB;IAEA,MAAMO,IAAI,GAAG,MAAMf,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,OAAOM,IAAI;EACb,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd;IACAT,QAAQ,CAACW,eAAe,CAAC;MAAEC,MAAM,EAAEH,KAAK,CAACI;IAAM,CAAC,CAAC;IACjDC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACpB;AACF,CACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMQ,OAAO,GAAGrB,gBAAgB,CAAC,cAAc,EAAE,YAAY;EAClE;EACA,MAAMM,KAAK,CAAC,aAAa,EAAE;IACzBC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,OAAO,CAAC,CAAC;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}