{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\EditUserInfo\\\\EditUserInfo.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserInfo = () => {\n  _s();\n  const {\n    userProfile,\n    accessToken\n  } = useSelector(state => state.auth);\n  const {\n    firstName,\n    lastName,\n    userName\n  } = userProfile;\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(\"\");\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [username, setUsername] = useState(userName);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleEditName = () => {\n    setIsFormVisible(true);\n    setUsername(userName);\n  };\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handleSave = async event => {\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher la soumission du formulaire\n    try {\n      setIsLoading(true);\n      await dispatch(updateUsername({\n        accessToken,\n        userName: username\n      }));\n      setMessage(\"Informations enregistrées avec succès !\");\n      setIsFormVisible(false);\n    } catch (error) {\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCancel = event => {\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher la soumission du formulaire\n    setMessage(\"Modifications annulées.\");\n    setIsFormVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `form-group edit-user-info ${isFormVisible ? \"form-visible\" : \"\"}`,\n    onSubmit: event => event.preventDefault() // Ajoutez cette ligne pour empêcher la soumission du formulaire\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\" // Changez le type du bouton en \"submit\"\n        ,\n        className: \"save-btn\",\n        onClick: handleSave,\n        disabled: isLoading,\n        children: isLoading ? \"Saving...\" : \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\" // Changez le type du bouton en \"button\"\n        ,\n        className: \"cancel-btn\",\n        onClick: handleCancel,\n        disabled: isLoading,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUsername } from \"../../actions/authActions\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  const { firstName, lastName, userName } = userProfile;\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [username, setUsername] = useState(userName);\r\n  //console.log(userProfile);\r\n  //console.log(accessToken);\r\n  //affichage du formulaire\r\n  function handleEditName() {\r\n    setIsFormVisible(true);\r\n    setUsername(userName);\r\n  }\r\n\r\n  //changelement du userName, nouvelle valeur\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await dispatch(updateUsername({ accessToken, userName }));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`form-group edit-user-info ${\r\n        isFormVisible ? \"form-visible\" : \"\"\r\n      }`}\r\n    >\r\n      <div>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input type=\"text\" id=\"firstName\" name=\"firstName\" value={firstName} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Last Name:</label>\r\n        <input type=\"text\" id=\"lastName\" name=\"lastName\" value={lastName} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"userName\">UserName:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={handleUsernameChange}\r\n        />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button className=\"save-btn\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button className=\"cancel-btn\" onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {message && <div>{message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;*/\n_s(EditUserInfo, \"tp6O6W9x8Win0+jndnPQ33x8sQI=\", true);\n_c = EditUserInfo;\nvar _c;\n$RefreshReg$(_c, \"EditUserInfo\");","map":{"version":3,"names":["EditUserInfo","_s","userProfile","accessToken","useSelector","state","auth","firstName","lastName","userName","dispatch","useDispatch","message","setMessage","useState","isFormVisible","setIsFormVisible","username","setUsername","isLoading","setIsLoading","handleEditName","handleUsernameChange","event","target","value","handleSave","preventDefault","updateUsername","error","handleCancel","_jsxDEV","className","onSubmit","children","type","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/EditUserInfo/EditUserInfo.jsx"],"sourcesContent":["const EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  const { firstName, lastName, userName } = userProfile;\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [username, setUsername] = useState(userName);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleEditName = () => {\r\n    setIsFormVisible(true);\r\n    setUsername(userName);\r\n  };\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher la soumission du formulaire\r\n    try {\r\n      setIsLoading(true);\r\n      await dispatch(updateUsername({ accessToken, userName: username }));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = (event) => {\r\n    event.preventDefault(); // Ajoutez cette ligne pour empêcher la soumission du formulaire\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`form-group edit-user-info ${\r\n        isFormVisible ? \"form-visible\" : \"\"\r\n      }`}\r\n      onSubmit={(event) => event.preventDefault()} // Ajoutez cette ligne pour empêcher la soumission du formulaire\r\n    >\r\n      {/* ... */}\r\n      <div className=\"buttons\">\r\n        <button\r\n          type=\"submit\" // Changez le type du bouton en \"submit\"\r\n          className=\"save-btn\"\r\n          onClick={handleSave}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? \"Saving...\" : \"Save\"}\r\n        </button>\r\n        <button\r\n          type=\"button\" // Changez le type du bouton en \"button\"\r\n          className=\"cancel-btn\"\r\n          onClick={handleCancel}\r\n          disabled={isLoading}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {message && <div>{message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUsername } from \"../../actions/authActions\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  const { firstName, lastName, userName } = userProfile;\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [username, setUsername] = useState(userName);\r\n  //console.log(userProfile);\r\n  //console.log(accessToken);\r\n  //affichage du formulaire\r\n  function handleEditName() {\r\n    setIsFormVisible(true);\r\n    setUsername(userName);\r\n  }\r\n\r\n  //changelement du userName, nouvelle valeur\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await dispatch(updateUsername({ accessToken, userName }));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`form-group edit-user-info ${\r\n        isFormVisible ? \"form-visible\" : \"\"\r\n      }`}\r\n    >\r\n      <div>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input type=\"text\" id=\"firstName\" name=\"firstName\" value={firstName} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Last Name:</label>\r\n        <input type=\"text\" id=\"lastName\" name=\"lastName\" value={lastName} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"userName\">UserName:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={handleUsernameChange}\r\n        />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button className=\"save-btn\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button className=\"cancel-btn\" onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {message && <div>{message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}