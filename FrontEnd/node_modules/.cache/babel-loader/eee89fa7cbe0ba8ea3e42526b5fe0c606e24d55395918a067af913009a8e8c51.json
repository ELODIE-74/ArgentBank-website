{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\signinfom\\\\signinform.jsx\",\n  _s = $RefreshSig$();\n//formulaire d'authentification\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    loading,\n    error\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      await dispatch(login({\n        email,\n        password\n      }));\n      const accessToken = localStorage.getItem(\"accessToken\");\n      await dispatch(fetchUserProfile(accessToken));\n      navigate(\"/user\");\n    } catch (err) {\n      navigate(\"/error\");\n    }\n  };\n  /*const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }))\r\n      .then((data) => {\r\n        // Récupération du token depuis le payload lors de l'authentification\r\n        const accessToken = data.body.token;\r\n        dispatch(fetchUserProfile(accessToken)).then(() => {\r\n          return navigate(\"/user\");\r\n        });\r\n      })\r\n        .catch((error) => {\r\n        navigate(\"/error404\"); // Gérer les erreurs de connexion\r\n      });\r\n  };*/\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"sign-in-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa fa-user-circle sign-in-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-remember\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"remember-me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"remember-me\",\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"sign-in-button\",\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SignInForm, \"6mIp2Tj/lI69D9P9M4mNhBXorsE=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = SignInForm;\nexport default SignInForm;\n\n/*const handleLogin = async (email, password) => {\r\n    try {\r\n      dispatch(login({ email, password }));\r\n      dispatch(fetchUserProfile());\r\n      // Rediriger vers la page de l'utilisateur\r\n      navigate(\"/user\");\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      navigate(\"/error404\"); // Gérer les erreurs de connexion\r\n    }\r\n  };\r\n  const userData = {\r\nemail,\r\npassword,\r\nfirstName,\r\nlastName,\r\nusername\r\n}; \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleLogin(email, password);\r\n  };*/\n/*import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\r\n\r\nfunction SignInForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }))\r\n      .then((data) => {\r\n        const accessToken = data.body.token;\r\n        return dispatch(fetchUserProfile(accessToken));\r\n      })\r\n      .then((userProfile) => {\r\n        localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        navigate(\"/user\"); // Redirigez l'utilisateur vers la page d'accueil après une connexion réussie\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/error404\"); // Gérer les erreurs de connexion\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"sign-in-content\">\r\n      <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n      <h1>Sign In</h1>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-remember\">\r\n          <input type=\"checkbox\" id=\"remember-me\" />\r\n          <label htmlFor=\"remember-me\">Remember me</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"sign-in-button\" disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Sign In\"}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignInForm;*/\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","fetchUserProfile","login","jsxDEV","_jsxDEV","SignInForm","_s","email","setEmail","password","setPassword","loading","error","state","auth","dispatch","navigate","handleSubmit","e","preventDefault","accessToken","localStorage","getItem","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/signinfom/signinform.jsx"],"sourcesContent":["//formulaire d'authentification\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\r\n\r\nconst SignInForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      await dispatch(login({ email, password }));\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      await dispatch(fetchUserProfile(accessToken));\r\n      navigate(\"/user\");\r\n    } catch (err) {\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n  /*const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }))\r\n      .then((data) => {\r\n        // Récupération du token depuis le payload lors de l'authentification\r\n        const accessToken = data.body.token;\r\n        dispatch(fetchUserProfile(accessToken)).then(() => {\r\n          return navigate(\"/user\");\r\n        });\r\n      })\r\n\r\n      .catch((error) => {\r\n        navigate(\"/error404\"); // Gérer les erreurs de connexion\r\n      });\r\n  };*/\r\n  return (\r\n    <section className=\"sign-in-content\">\r\n      <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n      <h1>Sign In</h1>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"userName\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-remember\">\r\n          <input type=\"checkbox\" id=\"remember-me\" />\r\n          <label htmlFor=\"remember-me\">Remember me</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"sign-in-button\" disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Sign In\"}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n\r\n/*const handleLogin = async (email, password) => {\r\n    try {\r\n      dispatch(login({ email, password }));\r\n      dispatch(fetchUserProfile());\r\n      // Rediriger vers la page de l'utilisateur\r\n      navigate(\"/user\");\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      navigate(\"/error404\"); // Gérer les erreurs de connexion\r\n    }\r\n  };\r\n  const userData = {\r\nemail,\r\npassword,\r\nfirstName,\r\nlastName,\r\nusername\r\n}; \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleLogin(email, password);\r\n  };*/\r\n/*import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\r\n\r\nfunction SignInForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }))\r\n      .then((data) => {\r\n        const accessToken = data.body.token;\r\n        return dispatch(fetchUserProfile(accessToken));\r\n      })\r\n      .then((userProfile) => {\r\n        localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        navigate(\"/user\"); // Redirigez l'utilisateur vers la page d'accueil après une connexion réussie\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/error404\"); // Gérer les erreurs de connexion\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"sign-in-content\">\r\n      <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n      <h1>Sign In</h1>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-remember\">\r\n          <input type=\"checkbox\" id=\"remember-me\" />\r\n          <label htmlFor=\"remember-me\">Remember me</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"sign-in-button\" disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Sign In\"}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignInForm;*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}