{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\EditUserInfo\\\\EditUserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUsername } from \"../../actions/authActions\";\nimport \"../EditUserInfo/EditUserinfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserInfo = () => {\n  _s();\n  const {\n    userProfile,\n    accessToken\n  } = useSelector(state => state.auth);\n  console.log(userProfile);\n  console.log(accessToken);\n  /* const dispatch = useDispatch();\r\n  const { userProfile, auth } = useSelector((state) => state);\r\n  const accessToken = auth.accessToken;\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n    //affichage du formulaire\r\n  const handleEditName = () => {\r\n    setIsFormVisible(true);\r\n    setUsername(userProfile?.userName || \"\");\r\n  };\r\n    //changelement du userName, nouvelle valeur\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n    //sauvegarde et envoie de la nouvelle valeur\r\n  const handleSave = async () => {\r\n    try {\r\n      await dispatch(updateUsername(accessToken, userName));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };\r\n    //annulation des données\r\n  const handleCancel = () => {\r\n    setUsername(userProfile.userName);\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n  console.log(userProfile);*/\n  //rendu du composant\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n  /*\r\n  <form\r\n    className={`form-group edit-user-info ${\r\n      isFormVisible ? \"form-visible\" : \"\"\r\n    }`}\r\n  >\r\n      <div>\r\n      <label htmlFor=\"firstName\">First Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"firstName\"\r\n        name=\"firstName\"\r\n        value={userProfile?.firstName || \"\"}\r\n        disabled={status === \"loading\"}\r\n      />\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"lastName\">Last Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"lastName\"\r\n        name=\"lastName\"\r\n        value={userProfile?.lastName || \"\"}\r\n        disabled={status === \"loading\"}\r\n      />\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"userName\">UserName:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"userName\"\r\n        name=\"userName\"\r\n        value={userName}\r\n        onChange={handleUsernameChange}\r\n        disabled={status === \"loading\"}\r\n      />\r\n    </div>\r\n    <div className=\"buttons\">\r\n      <button className=\"save-btn\" onClick={handleSave}>\r\n        Save\r\n      </button>\r\n      <button className=\"cancel-btn\" onClick={handleCancel}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n    {message && <div>{message}</div>}\r\n  </form>*/;\n};\n_s(EditUserInfo, \"Rwv/aBolcNOfJ5XYhcble9C5hOw=\", false, function () {\n  return [useSelector];\n});\n_c = EditUserInfo;\nexport default EditUserInfo;\nvar _c;\n$RefreshReg$(_c, \"EditUserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","updateUsername","jsxDEV","_jsxDEV","EditUserInfo","_s","userProfile","accessToken","state","auth","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/EditUserInfo/EditUserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUsername } from \"../../actions/authActions\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const { userProfile, accessToken } = useSelector((state) => state.auth);\r\n  console.log(userProfile);\r\n  console.log(accessToken);\r\n  /* const dispatch = useDispatch();\r\n  const { userProfile, auth } = useSelector((state) => state);\r\n  const accessToken = auth.accessToken;\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n\r\n  //affichage du formulaire\r\n  const handleEditName = () => {\r\n    setIsFormVisible(true);\r\n    setUsername(userProfile?.userName || \"\");\r\n  };\r\n\r\n  //changelement du userName, nouvelle valeur\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  //sauvegarde et envoie de la nouvelle valeur\r\n  const handleSave = async () => {\r\n    try {\r\n      await dispatch(updateUsername(accessToken, userName));\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n      setIsFormVisible(false);\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };\r\n\r\n  //annulation des données\r\n  const handleCancel = () => {\r\n    setUsername(userProfile.userName);\r\n    setMessage(\"Modifications annulées.\");\r\n    setIsFormVisible(false);\r\n  };\r\n  console.log(userProfile);*/\r\n  //rendu du composant\r\n  return (\r\n    <div></div>\r\n    /*\r\n    <form\r\n      className={`form-group edit-user-info ${\r\n        isFormVisible ? \"form-visible\" : \"\"\r\n      }`}\r\n    >\r\n\r\n      <div>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          value={userProfile?.firstName || \"\"}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          value={userProfile?.lastName || \"\"}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"userName\">UserName:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={handleUsernameChange}\r\n          disabled={status === \"loading\"}\r\n        />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button className=\"save-btn\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button className=\"cancel-btn\" onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {message && <div>{message}</div>}\r\n    </form>*/\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACvEC,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;EACxBI,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;EACxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAKE;EACA,oBACEJ,OAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU;EACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WA9CI;AAiDJ,CAAC;AAACV,EAAA,CA5FID,YAAY;EAAA,QACqBJ,WAAW;AAAA;AAAAgB,EAAA,GAD5CZ,YAAY;AA8FlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}