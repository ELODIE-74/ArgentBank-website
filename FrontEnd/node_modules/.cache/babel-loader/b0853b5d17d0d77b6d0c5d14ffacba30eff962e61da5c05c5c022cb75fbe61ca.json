{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\signinfom\\\\signinform.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInForm() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    loading,\n    error\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login({\n      email,\n      password\n    })).then(data => {\n      const accessToken = data.body.token;\n      return dispatch(fetchUserProfile(accessToken));\n    }).then(userProfile => {\n      // Sauvegarder les informations de l'utilisateur en local\n      localStorage.setItem(\"user\", JSON.stringify(userProfile));\n      localStorage.setItem(\"accessToken\", userProfile.body.token);\n      navigate(\"/user\"); // Redirigez l'utilisateur vers la page d'accueil après une connexion réussie\n    }).catch(error => {\n      console.error(error);\n      navigate(\"/error404\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"sign-in-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa fa-user-circle sign-in-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInForm, \"6mIp2Tj/lI69D9P9M4mNhBXorsE=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = SignInForm;\nexport default SignInForm;\n/*import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\r\n\r\nfunction SignInForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }))\r\n      .then((data) => {\r\n        const accessToken = data.body.token;\r\n        return dispatch(fetchUserProfile(accessToken));\r\n      })\r\n      .then((userProfile) => {\r\n        // Sauvegarder les informations de l'utilisateur en local\r\n        localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        navigate(\"/user\"); // Redirigez l'utilisateur vers la page d'accueil après une connexion réussie\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/error404\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"sign-in-content\">\r\n      <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n      <h1>Sign In</h1>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-remember\">\r\n          <input type=\"checkbox\" id=\"remember-me\" />\r\n          <label htmlFor=\"remember-me\">Remember me</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"sign-in-button\" disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Sign In\"}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignInForm;*/\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","fetchUserProfile","login","jsxDEV","_jsxDEV","SignInForm","_s","email","setEmail","password","setPassword","loading","error","state","auth","dispatch","navigate","handleSubmit","e","preventDefault","then","data","accessToken","body","token","userProfile","localStorage","setItem","JSON","stringify","catch","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/signinfom/signinform.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\r\n\r\nfunction SignInForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }))\r\n      .then((data) => {\r\n        const accessToken = data.body.token;\r\n        return dispatch(fetchUserProfile(accessToken));\r\n      })\r\n      .then((userProfile) => {\r\n        // Sauvegarder les informations de l'utilisateur en local\r\n        localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n        localStorage.setItem(\"accessToken\", userProfile.body.token);\r\n        navigate(\"/user\"); // Redirigez l'utilisateur vers la page d'accueil après une connexion réussie\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        navigate(\"/error404\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"sign-in-content\">\r\n      <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n      <h1>Sign In</h1>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Reste du code du formulaire de connexion */}\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignInForm;\r\n/*import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUserProfile, login } from \"../../actions/authActions\";\r\n\r\nfunction SignInForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }))\r\n      .then((data) => {\r\n        const accessToken = data.body.token;\r\n        return dispatch(fetchUserProfile(accessToken));\r\n      })\r\n      .then((userProfile) => {\r\n        // Sauvegarder les informations de l'utilisateur en local\r\n        localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        navigate(\"/user\"); // Redirigez l'utilisateur vers la page d'accueil après une connexion réussie\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/error404\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"sign-in-content\">\r\n      <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n      <h1>Sign In</h1>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-remember\">\r\n          <input type=\"checkbox\" id=\"remember-me\" />\r\n          <label htmlFor=\"remember-me\">Remember me</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"sign-in-button\" disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Sign In\"}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignInForm;*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}