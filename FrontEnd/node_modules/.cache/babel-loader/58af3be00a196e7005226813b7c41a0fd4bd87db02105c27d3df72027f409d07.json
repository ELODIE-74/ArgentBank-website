{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\headeruser\\\\headeruser.jsx\",\n  _s = $RefreshSig$();\n// HeaderUser.js\nimport React, { useState } from \"react\";\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeaderUser({\n  isLoggedIn,\n  username,\n  originalUserInfo\n}) {\n  _s();\n  const [showEditForm, setShowEditForm] = useState(false);\n  const handleEditClick = () => {\n    setShowEditForm(true);\n  };\n  const handleEditComplete = updatedUserInfo => {\n    // Logique de mise à jour des informations utilisateur\n    console.log(\"Informations utilisateur mises à jour :\", updatedUserInfo);\n    setShowEditForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-user\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Logged in as: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        children: \"Edit Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), showEditForm && /*#__PURE__*/_jsxDEV(EditUserInfo, {\n      isLoggedIn: isLoggedIn,\n      username: username,\n      originalUserInfo: originalUserInfo,\n      onEditComplete: handleEditComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(HeaderUser, \"Wdoqh2Jk0KPIpkjQdMeiyyFA1O4=\");\n_c = HeaderUser;\nexport default HeaderUser;\n/*import React, { useState } from \"react\";\r\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\r\n\r\nfunction Header() {\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: \"Tony\",\r\n    lastName: \"Jarvis\",\r\n    username: \"tonyjarvis\",\r\n  });\r\n\r\n  const handleEditButtonClick = () => {\r\n    setShowEditForm(!showEditForm); // change sa valeur d'affichage\r\n  };\r\n\r\n  const handleEditComplete = (updatedUserInfo) => {\r\n    setUserInfo(updatedUserInfo);\r\n    setShowEditForm(false);\r\n    // Ici,on envoie les nouvelles informations au serveur\r\n  };\r\n  // écouteur d'événement au clic sur le bouton qui permet d'afficher le formulaire de modifications d'informations\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        Welcome back\r\n        <br />\r\n        {userInfo.firstName} {userInfo.lastName}\r\n      </h1>\r\n      <button className=\"edit-button\" onClick={handleEditButtonClick}>\r\n        Edit Name\r\n      </button>\r\n      {showEditForm && (\r\n        <EditUserInfo\r\n          isLoggedIn={true}\r\n          username={userInfo.username}\r\n          originalUserInfo={{\r\n            firstName: userInfo.firstName,\r\n            lastName: userInfo.lastName,\r\n            username: userInfo.username,\r\n            //récupére le nom, prénom et le speudo de l'utlisateur, les nouvelles valeurs\r\n          }}\r\n          onEditComplete={handleEditComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;*/\nvar _c;\n$RefreshReg$(_c, \"HeaderUser\");","map":{"version":3,"names":["React","useState","EditUserInfo","jsxDEV","_jsxDEV","HeaderUser","isLoggedIn","username","originalUserInfo","_s","showEditForm","setShowEditForm","handleEditClick","handleEditComplete","updatedUserInfo","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEditComplete","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/headeruser/headeruser.jsx"],"sourcesContent":["// HeaderUser.js\r\nimport React, { useState } from \"react\";\r\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\r\n\r\nfunction HeaderUser({ isLoggedIn, username, originalUserInfo }) {\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n\r\n  const handleEditClick = () => {\r\n    setShowEditForm(true);\r\n  };\r\n\r\n  const handleEditComplete = (updatedUserInfo) => {\r\n    // Logique de mise à jour des informations utilisateur\r\n    console.log(\"Informations utilisateur mises à jour :\", updatedUserInfo);\r\n    setShowEditForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-user\">\r\n      <div className=\"user-info\">\r\n        <span>Logged in as: {username}</span>\r\n        <button onClick={handleEditClick}>Edit Name</button>\r\n      </div>\r\n      {showEditForm && (\r\n        <EditUserInfo\r\n          isLoggedIn={isLoggedIn}\r\n          username={username}\r\n          originalUserInfo={originalUserInfo}\r\n          onEditComplete={handleEditComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderUser;\r\n/*import React, { useState } from \"react\";\r\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\r\n\r\nfunction Header() {\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: \"Tony\",\r\n    lastName: \"Jarvis\",\r\n    username: \"tonyjarvis\",\r\n  });\r\n\r\n  const handleEditButtonClick = () => {\r\n    setShowEditForm(!showEditForm); // change sa valeur d'affichage\r\n  };\r\n\r\n  const handleEditComplete = (updatedUserInfo) => {\r\n    setUserInfo(updatedUserInfo);\r\n    setShowEditForm(false);\r\n    // Ici,on envoie les nouvelles informations au serveur\r\n  };\r\n  // écouteur d'événement au clic sur le bouton qui permet d'afficher le formulaire de modifications d'informations\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        Welcome back\r\n        <br />\r\n        {userInfo.firstName} {userInfo.lastName}\r\n      </h1>\r\n      <button className=\"edit-button\" onClick={handleEditButtonClick}>\r\n        Edit Name\r\n      </button>\r\n      {showEditForm && (\r\n        <EditUserInfo\r\n          isLoggedIn={true}\r\n          username={userInfo.username}\r\n          originalUserInfo={{\r\n            firstName: userInfo.firstName,\r\n            lastName: userInfo.lastName,\r\n            username: userInfo.username,\r\n            //récupére le nom, prénom et le speudo de l'utlisateur, les nouvelles valeurs\r\n          }}\r\n          onEditComplete={handleEditComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;*/\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,UAAUA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5BD,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAME,kBAAkB,GAAIC,eAAe,IAAK;IAC9C;IACAC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,eAAe,CAAC;IACvEH,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEP,OAAA;IAAKa,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1Bd,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBd,OAAA;QAAAc,QAAA,GAAM,gBAAc,EAACX,QAAQ;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrClB,OAAA;QAAQmB,OAAO,EAAEX,eAAgB;QAAAM,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,EACLZ,YAAY,iBACXN,OAAA,CAACF,YAAY;MACXI,UAAU,EAAEA,UAAW;MACvBC,QAAQ,EAAEA,QAAS;MACnBC,gBAAgB,EAAEA,gBAAiB;MACnCgB,cAAc,EAAEX;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CA7BQJ,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AA+BnB,eAAeA,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}