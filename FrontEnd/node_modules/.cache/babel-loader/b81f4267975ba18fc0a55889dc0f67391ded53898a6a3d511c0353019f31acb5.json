{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\headeruser\\\\headeruser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    firstName: \"Tony\",\n    lastName: \"Jarvis\",\n    username: \"tonyjarvis\"\n  });\n  const handleEditButtonClick = () => {\n    setShowEditForm(true); // Passer showEditForm à true pour afficher le formulaire\n  };\n  const handleEditComplete = updatedUserInfo => {\n    setUserInfo(updatedUserInfo);\n    setShowEditForm(false); // Passer showEditForm à false pour masquer le formulaire\n    // Ici, on envoie les nouvelles informations au serveur\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: !showEditForm ?\n    /*#__PURE__*/\n    // Si showEditForm est false, afficher le titre \"Welcome back\" et le bouton \"Edit Name\"\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), userInfo.firstName, \" \", userInfo.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: handleEditButtonClick,\n        children: \"Edit Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // Si showEditForm est true, afficher le titre \"Edit user info\" et le composant EditUserInfo\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit user info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditUserInfo, {\n        isLoggedIn: true,\n        username: userInfo.username,\n        originalUserInfo: {\n          firstName: userInfo.firstName,\n          lastName: userInfo.lastName,\n          username: userInfo.username\n        },\n        onEditComplete: handleEditComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"lz0SgcH2VHjK9xL8MkskRu06GuE=\");\n_c = Header;\nexport default Header;\n\n/*import React, { useState } from \"react\";\r\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\r\n\r\nfunction Header() {\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: \"Tony\",\r\n    lastName: \"Jarvis\",\r\n    username: \"tonyjarvis\",\r\n  });\r\n\r\n  const handleEditButtonClick = () => {\r\n    setShowEditForm(!showEditForm); // change sa valeur d'affichage\r\n  };\r\n\r\n  const handleEditComplete = (updatedUserInfo) => {\r\n    setUserInfo(updatedUserInfo);\r\n    setShowEditForm(false);\r\n    // Ici,on envoie les nouvelles informations au serveur\r\n  };\r\n  // écouteur d'événement au clic sur le bouton qui permet d'afficher le formulaire de modifications d'informations\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        Welcome back\r\n        <br />\r\n        {userInfo.firstName} {userInfo.lastName}\r\n      </h1>\r\n      <button className=\"edit-button\" onClick={handleEditButtonClick}>\r\n        Edit Name\r\n      </button>\r\n      {showEditForm && (\r\n        <EditUserInfo\r\n          isLoggedIn={true}\r\n          username={userInfo.username}\r\n          originalUserInfo={{\r\n            firstName: userInfo.firstName,\r\n            lastName: userInfo.lastName,\r\n            username: userInfo.username,\r\n            //récupére le nom, prénom et le speudo de l'utlisateur, les nouvelles valeurs\r\n          }}\r\n          onEditComplete={handleEditComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;*/\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","EditUserInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","showEditForm","setShowEditForm","userInfo","setUserInfo","firstName","lastName","username","handleEditButtonClick","handleEditComplete","updatedUserInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isLoggedIn","originalUserInfo","onEditComplete","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/headeruser/headeruser.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\r\n\r\nfunction Header() {\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: \"Tony\",\r\n    lastName: \"Jarvis\",\r\n    username: \"tonyjarvis\",\r\n  });\r\n\r\n  const handleEditButtonClick = () => {\r\n    setShowEditForm(true); // Passer showEditForm à true pour afficher le formulaire\r\n  };\r\n\r\n  const handleEditComplete = (updatedUserInfo) => {\r\n    setUserInfo(updatedUserInfo);\r\n    setShowEditForm(false); // Passer showEditForm à false pour masquer le formulaire\r\n    // Ici, on envoie les nouvelles informations au serveur\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      {!showEditForm ? (\r\n        // Si showEditForm est false, afficher le titre \"Welcome back\" et le bouton \"Edit Name\"\r\n        <>\r\n          <h1>\r\n            Welcome back\r\n            <br />\r\n            {userInfo.firstName} {userInfo.lastName}\r\n          </h1>\r\n          <button className=\"edit-button\" onClick={handleEditButtonClick}>\r\n            Edit Name\r\n          </button>\r\n        </>\r\n      ) : (\r\n        // Si showEditForm est true, afficher le titre \"Edit user info\" et le composant EditUserInfo\r\n        <>\r\n          <h1>Edit user info</h1>\r\n          <EditUserInfo\r\n            isLoggedIn={true}\r\n            username={userInfo.username}\r\n            originalUserInfo={{\r\n              firstName: userInfo.firstName,\r\n              lastName: userInfo.lastName,\r\n              username: userInfo.username,\r\n            }}\r\n            onEditComplete={handleEditComplete}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\n/*import React, { useState } from \"react\";\r\nimport EditUserInfo from \"../../components/EditUserInfo/EditUserInfo\";\r\n\r\nfunction Header() {\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: \"Tony\",\r\n    lastName: \"Jarvis\",\r\n    username: \"tonyjarvis\",\r\n  });\r\n\r\n  const handleEditButtonClick = () => {\r\n    setShowEditForm(!showEditForm); // change sa valeur d'affichage\r\n  };\r\n\r\n  const handleEditComplete = (updatedUserInfo) => {\r\n    setUserInfo(updatedUserInfo);\r\n    setShowEditForm(false);\r\n    // Ici,on envoie les nouvelles informations au serveur\r\n  };\r\n  // écouteur d'événement au clic sur le bouton qui permet d'afficher le formulaire de modifications d'informations\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        Welcome back\r\n        <br />\r\n        {userInfo.firstName} {userInfo.lastName}\r\n      </h1>\r\n      <button className=\"edit-button\" onClick={handleEditButtonClick}>\r\n        Edit Name\r\n      </button>\r\n      {showEditForm && (\r\n        <EditUserInfo\r\n          isLoggedIn={true}\r\n          username={userInfo.username}\r\n          originalUserInfo={{\r\n            firstName: userInfo.firstName,\r\n            lastName: userInfo.lastName,\r\n            username: userInfo.username,\r\n            //récupére le nom, prénom et le speudo de l'utlisateur, les nouvelles valeurs\r\n          }}\r\n          onEditComplete={handleEditComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtE,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCN,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMO,kBAAkB,GAAIC,eAAe,IAAK;IAC9CN,WAAW,CAACM,eAAe,CAAC;IAC5BR,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,QAAQ;IAAAC,QAAA,EACpB,CAACX,YAAY;IAAA;IACZ;IACAL,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,GAAI,cAEF,eAAAhB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLb,QAAQ,CAACE,SAAS,EAAC,GAAC,EAACF,QAAQ,CAACG,QAAQ;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACLpB,OAAA;QAAQe,SAAS,EAAC,aAAa;QAACM,OAAO,EAAET,qBAAsB;QAAAI,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC;IAAA;IAEH;IACApB,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBpB,OAAA,CAACF,YAAY;QACXwB,UAAU,EAAE,IAAK;QACjBX,QAAQ,EAAEJ,QAAQ,CAACI,QAAS;QAC5BY,gBAAgB,EAAE;UAChBd,SAAS,EAAEF,QAAQ,CAACE,SAAS;UAC7BC,QAAQ,EAAEH,QAAQ,CAACG,QAAQ;UAC3BC,QAAQ,EAAEJ,QAAQ,CAACI;QACrB,CAAE;QACFa,cAAc,EAAEX;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA,eACF;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAlDQD,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAoDf,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}