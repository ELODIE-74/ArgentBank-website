{"ast":null,"code":"//fichier authReducer\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { login, fetchUserProfile } from \"../actions/authActions\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    accessToken: null,\n    userProfile: {\n      id: null,\n      email: null,\n      firstName: null,\n      lastName: null,\n      userName: null\n    },\n    status: \"idle\",\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.accessToken = null;\n      state.userProfile = {\n        id: null,\n        email: null\n      };\n      localStorage.removeItem(\"accessToken\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.accessToken = action.payload.body.token;\n      state.status = \"succeeded\";\n      state.userProfile = action.payload.user;\n    }).addCase(login.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    }).addCase(fetchUserProfile.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.userProfile = {\n        id: action.payload.id,\n        email: action.payload.email,\n        firstName: action.payload.firstName,\n        lastName: action.payload.lastName,\n        userName: action.payload.userName\n      };\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","login","fetchUserProfile","authSlice","name","initialState","accessToken","userProfile","id","email","firstName","lastName","userName","status","error","reducers","logout","state","localStorage","removeItem","extraReducers","builder","addCase","fulfilled","action","payload","body","token","user","rejected","message","pending","reducer"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/reducers/authReducer.js"],"sourcesContent":["//fichier authReducer\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login, fetchUserProfile } from \"../actions/authActions\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    accessToken: null,\r\n    userProfile: {\r\n      id: null,\r\n      email: null,\r\n      firstName: null,\r\n      lastName: null,\r\n      userName: null,\r\n    },\r\n    status: \"idle\",\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.accessToken = null;\r\n      state.userProfile = {\r\n        id: null,\r\n        email: null,\r\n      };\r\n      localStorage.removeItem(\"accessToken\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.accessToken = action.payload.body.token;\r\n        state.status = \"succeeded\";\r\n        state.userProfile = action.payload.user;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(fetchUserProfile.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.userProfile = {\r\n          id: action.payload.id,\r\n          email: action.payload.email,\r\n          firstName: action.payload.firstName,\r\n          lastName: action.payload.lastName,\r\n          userName: action.payload.userName,\r\n        };\r\n      })\r\n      .addCase(fetchUserProfile.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,EAAEC,gBAAgB,QAAQ,wBAAwB;AAEhE,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE;MACXC,EAAE,EAAE,IAAI;MACRC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACX,WAAW,GAAG,IAAI;MACxBW,KAAK,CAACV,WAAW,GAAG;QAClBC,EAAE,EAAE,IAAI;QACRC,KAAK,EAAE;MACT,CAAC;MACDS,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;IACxC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,KAAK,CAACsB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC3CP,KAAK,CAACX,WAAW,GAAGkB,MAAM,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK;MAC7CV,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACV,WAAW,GAAGiB,MAAM,CAACC,OAAO,CAACG,IAAI;IACzC,CAAC,CAAC,CACDN,OAAO,CAACrB,KAAK,CAAC4B,QAAQ,EAAE,CAACZ,KAAK,EAAEO,MAAM,KAAK;MAC1CP,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACgB,OAAO;IACpC,CAAC,CAAC,CACDR,OAAO,CAACpB,gBAAgB,CAAC6B,OAAO,EAAGd,KAAK,IAAK;MAC5CA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDS,OAAO,CAACpB,gBAAgB,CAACqB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACtDP,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACV,WAAW,GAAG;QAClBC,EAAE,EAAEgB,MAAM,CAACC,OAAO,CAACjB,EAAE;QACrBC,KAAK,EAAEe,MAAM,CAACC,OAAO,CAAChB,KAAK;QAC3BC,SAAS,EAAEc,MAAM,CAACC,OAAO,CAACf,SAAS;QACnCC,QAAQ,EAAEa,MAAM,CAACC,OAAO,CAACd,QAAQ;QACjCC,QAAQ,EAAEY,MAAM,CAACC,OAAO,CAACb;MAC3B,CAAC;IACH,CAAC,CAAC,CACDU,OAAO,CAACpB,gBAAgB,CAAC2B,QAAQ,EAAE,CAACZ,KAAK,EAAEO,MAAM,KAAK;MACrDP,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACgB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAe3B,SAAS,CAAC6B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}