{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elodi\\\\OneDrive\\\\Documents\\\\ArgentBank-website\\\\FrontEnd\\\\src\\\\components\\\\EditUserInfo\\\\EditUserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../EditUserInfo/EditUserinfo.css\";\n//import { updateUsername } from \"../../actions/authActions\"; // Importez la fonction d'action pour mettre à jour le nom d'utilisateur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserInfo = () => {\n  _s();\n  const [username, setUsername] = useState(\"\"); // Utilisation du hook useState pour créer des états locaux pour le nom d'utilisateur\n  const [firstName, setFirstName] = useState(\"\"); // Prénom est en lecture seule\n  const [lastName, setLastName] = useState(\"\"); // Nom est en lecture seule\n  const [message, setMessage] = useState(\"\"); // État local pour stocker le message de confirmation\n\n  // Définition de la fonction de rappel qui gère les changements de valeur du champ du nom d'utilisateur\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  // Définition de la fonction de rappel qui gère l'enregistrement des données du formulaire\n  /*const handleSave = async () => {\r\n    try {\r\n      // Appel API pour mettre à jour le nom d'utilisateur\r\n      await updateUsername(username);\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };*/\n\n  // Définition de la fonction de rappel qui gère l'annulation des modifications du formulaire\n  const handleCancel = () => {\n    setUsername(\"\");\n    setMessage(\"Modifications annulées.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          value: firstName,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          value: lastName,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUserInfo, \"zYU9BVwFZJtFDehfHivIxWNNGdQ=\");\n_c = EditUserInfo;\nexport default EditUserInfo;\n/*import React, { useState } from \"react\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const [username, setUsername] = useState(\"\"); //Utilisation du hook useState pour créer des états locaux pour le nom d'utilisateur, le prénom et le nom.\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  //Définition de la fonction de rappel qui gère les changements de valeur du champ du nom d'utilisateur.\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  //Définition de la fonction de rappel qui gère les changements de valeur du champ prénom.\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n  //Définition de la fonction de rappel qui gère les changements de valeur du champ nom.\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n  //Définition de la fonction de rappel qui gère l'enregistrement des données du formulaire.\r\n  const handleSave = () => {\r\n    // Logique de sauvegarde des données\r\n  };\r\n  //Définition de la fonction de rappel qui gère l'annulation des modifications du formulaire.\r\n  const handleCancel = () => {\r\n    // Réinitialiser les données du formulaire si nécessaire\r\n  };\r\n  //section contient le code JSX qui définit le rendu du composant.\r\n  /*Crée un champ de saisie de texte pour le nom d'utilisateur avec la valeur liée à l'état local username et \r\n  la fonction de rappel handleUsernameChange pour gérer les changements de valeur.*/\n/*return (\r\n    <div>\r\n      <div className=\"edit-user-info\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            value={firstName}\r\n            onChange={handleFirstNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            value={lastName}\r\n            onChange={handleLastNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button className=\"save-btn\" onClick={handleSave}>\r\n            Save\r\n          </button>\r\n          <button className=\"cancel-btn\" onClick={handleCancel}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;*/\nvar _c;\n$RefreshReg$(_c, \"EditUserInfo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditUserInfo","_s","username","setUsername","firstName","setFirstName","lastName","setLastName","message","setMessage","handleUsernameChange","event","target","value","handleCancel","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","disabled","onClick","handleSave","_c","$RefreshReg$"],"sources":["C:/Users/elodi/OneDrive/Documents/ArgentBank-website/FrontEnd/src/components/EditUserInfo/EditUserInfo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n//import { updateUsername } from \"../../actions/authActions\"; // Importez la fonction d'action pour mettre à jour le nom d'utilisateur\r\n\r\nconst EditUserInfo = () => {\r\n  const [username, setUsername] = useState(\"\"); // Utilisation du hook useState pour créer des états locaux pour le nom d'utilisateur\r\n  const [firstName, setFirstName] = useState(\"\"); // Prénom est en lecture seule\r\n  const [lastName, setLastName] = useState(\"\"); // Nom est en lecture seule\r\n  const [message, setMessage] = useState(\"\"); // État local pour stocker le message de confirmation\r\n\r\n  // Définition de la fonction de rappel qui gère les changements de valeur du champ du nom d'utilisateur\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  // Définition de la fonction de rappel qui gère l'enregistrement des données du formulaire\r\n  /*const handleSave = async () => {\r\n    try {\r\n      // Appel API pour mettre à jour le nom d'utilisateur\r\n      await updateUsername(username);\r\n      setMessage(\"Informations enregistrées avec succès !\");\r\n    } catch (error) {\r\n      setMessage(\"Une erreur est survenue lors de l'enregistrement.\");\r\n    }\r\n  };*/\r\n\r\n  // Définition de la fonction de rappel qui gère l'annulation des modifications du formulaire\r\n  const handleCancel = () => {\r\n    setUsername(\"\");\r\n    setMessage(\"Modifications annulées.\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"edit-user-info\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input type=\"text\" id=\"firstName\" value={firstName} disabled />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input type=\"text\" id=\"lastName\" value={lastName} disabled />\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button className=\"save-btn\" onClick={handleSave}>\r\n            Save\r\n          </button>\r\n          <button className=\"cancel-btn\" onClick={handleCancel}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {message && <div className=\"message\">{message}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;\r\n/*import React, { useState } from \"react\";\r\nimport \"../EditUserInfo/EditUserinfo.css\";\r\n\r\nconst EditUserInfo = () => {\r\n  const [username, setUsername] = useState(\"\"); //Utilisation du hook useState pour créer des états locaux pour le nom d'utilisateur, le prénom et le nom.\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  //Définition de la fonction de rappel qui gère les changements de valeur du champ du nom d'utilisateur.\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  //Définition de la fonction de rappel qui gère les changements de valeur du champ prénom.\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n  //Définition de la fonction de rappel qui gère les changements de valeur du champ nom.\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n  //Définition de la fonction de rappel qui gère l'enregistrement des données du formulaire.\r\n  const handleSave = () => {\r\n    // Logique de sauvegarde des données\r\n  };\r\n  //Définition de la fonction de rappel qui gère l'annulation des modifications du formulaire.\r\n  const handleCancel = () => {\r\n    // Réinitialiser les données du formulaire si nécessaire\r\n  };\r\n  //section contient le code JSX qui définit le rendu du composant.\r\n  /*Crée un champ de saisie de texte pour le nom d'utilisateur avec la valeur liée à l'état local username et \r\n  la fonction de rappel handleUsernameChange pour gérer les changements de valeur.*/\r\n/*return (\r\n    <div>\r\n      <div className=\"edit-user-info\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            value={firstName}\r\n            onChange={handleFirstNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            value={lastName}\r\n            onChange={handleLastNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button className=\"save-btn\" onClick={handleSave}>\r\n            Save\r\n          </button>\r\n          <button className=\"cancel-btn\" onClick={handleCancel}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;*/\r\n"],"mappings":"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C,SAAS;MAAAD,QAAA,EAAEP;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5DID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA8DlB,eAAeA,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}